generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username      String?
  password      String?
  role      String?
  carts       cart[]
  orders     Order[]   
  payments   Payment[] 
  createdAt DateTime @default(now())
}
 
model products {
  id                 Int       @id @default(autoincrement())
  productName        String?
  productPrice       Float?
  productDescription String?
  productCategory    String?
  productUrlImg      String?
  productColors      Json?
  productSizes       Json?
  stock              Int       @default(1)
  orders             OrderItem[]
  carts              cart[]
  createdAt          DateTime  @default(now())
}

model cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId  Int
  quantity  Int      @default(1)
  users    users @relation(fields: [userId], references: [id])
  products    products @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  @@unique([userId, productId])
}

model Order {
  id        Int        @id @default(autoincrement())
  items     OrderItem[]
  payment   Payment?   @relation(fields: [paymentId], references: [id])
  paymentId Int?       @unique
  userId    Int        
  users     users      @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Payment {
  id             Int       @id @default(autoincrement())
  status         String    
  method         String    
  transactionId  String?   
  userId         Int       
  users          users     @relation(fields: [userId], references: [id])
  orderId        Int?      @unique // Optional, since it's one-to-one
  order          Order?    @relation
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int      // Quantity of the specific product in the order
  order     Order    @relation(fields: [orderId], references: [id])
  products  products @relation(fields: [productId], references: [id])
}
